version: 4
data:
  attachedData:
    trivet:
      testSuites: []
      version: 1
  graphs:
    Vh2mw5duuDuZI8vag8pPS:
      metadata:
        description: ""
        id: Vh2mw5duuDuZI8vag8pPS
        name: Auto Laravel Sr Dev
      nodes:
        '[2_DjflD5HXzlEYrG4fOlf]:text "Text"':
          data:
            text: "QUESTION: Generate the Model"
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message3
          visualData: 356.9939768864508/811.3717940666932/330/234//
        '[2lmFNBhyzPh7N1OvhfPgG]:text "Text"':
          data:
            text: If it is not already in English, translate my task into English. Remove
              any comments related to the programmer, such as updates to
              documentation or information not useful for a GPT prompt, and
              respond only with the translation, nothing else.
          outgoingConnections:
            - output->"Chat" EHiUCChzKnLG5Eml0UIS6/systemPrompt
          visualData: -217.5150927859754/-95.757531995406/330/219//
        '[4Mi5IWMq5a4J4ZpP-6S3n]:assembleMessage "Assemble Message"':
          data:
            toolCallId: ""
            type: system
            useToolCallIdInput: false
            useTypeInput: false
          outgoingConnections:
            - message->"Chat" EY0-JFFxxvNkFIuJ9a5y-/systemPrompt
          visualData: 837.2073877219847/68.27349791198783/280/93//
        '[AI9rnqWLZC4wwSQ42ILFG]:text "Text"':
          data:
            text: "QUESTION: Generate the StoreRequest. Automatically infer the rules. The
              file path must be app/Http/Requests/ + ModelName + /Store +
              ModelName + Request.php. For instance, if it's for storing user
              data, the file should be named StoreUserRequest.php"
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message7
          visualData: 349.03282906813325/1590.9294793985327/330/238//
        '[Co96goY6kRzbNDEVzHDqH]:userInput "User Input"':
          data:
            prompt: "This is my assigned task: "
            useInput: false
          outgoingConnections:
            - questionsAndAnswers->"Chat" EHiUCChzKnLG5Eml0UIS6/prompt
          visualData: -230.30662441167863/108.6592264767843/325.2427058114997/226//
        '[EHiUCChzKnLG5Eml0UIS6]:chat "Chat"':
          data:
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            model: gpt-3.5-turbo
            parallelFunctionCalling: true
            stop: ""
            temperature: 0.8
            top_p: 1
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePresencePenaltyInput: false
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Assemble Message" 4Mi5IWMq5a4J4ZpP-6S3n/part2
          visualData: 350.53221351396587/78.51066816740787/339.91836158229603/225//
        '[EY0-JFFxxvNkFIuJ9a5y-]:chat "Chat"':
          data:
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            model: gpt-3.5-turbo
            parallelFunctionCalling: true
            responseFormat: json
            stop: ""
            temperature: 0.8
            top_p: 1
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePresencePenaltyInput: false
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          isSplitRun: true
          outgoingConnections:
            - response->"Chat" T-gHRG8UBzX0ZLJZCp1HT/prompt
            - response->"Extract JSON" RFs0dqw80evMO4f1hMh7X/input
          splitRunMax: 8
          visualData: 1239.1990819613031/-81.35774641215319/381.4455410661085/157//
        '[IYeOVFRVn9BuIW2nenkPB]:extractJson "Extract JSON"':
          isSplitRun: true
          outgoingConnections:
            - output->"Destructure" eWx337N91cvDojFOBdPa8/object
          splitRunMax: 10
          visualData: 2214.141236871226/524.0580158930769/280/250//
        '[JDgNiSDQpWlGM3EdRYcBQ]:text "Content"':
          data:
            text: "{{input}}"
          isSplitRun: true
          outgoingConnections:
            - output->"Write File" pj5mvJJ6NNZmQ0mwewvDZ/content
          splitRunMax: 10
          visualData: 2453.6739999982688/56.064695172864425/330/201//
        '[L19IEEAiyY1lanRaje3mG]:text "Content"':
          data:
            text: "{{input}}"
          isSplitRun: true
          outgoingConnections:
            - output->"Write File" Z6zzofm0BRvQwAjynWlLP/content
          splitRunMax: 10
          visualData: 3000.434150014748/648.739308015342/330/254//
        '[McQyyHtU6z25VJf7j85dC]:text "Text"':
          data:
            text: >-
              Assume the role of a senior developer proficient in Laravel 11
              development. You will be asked specific technical questions about
              creating components in Laravel, such as models, controllers, and
              middleware.


              When you receive a question, for example, "Can you create the Model?", you should respond by providing a well-formatted JSON that includes the file path and the PHP source code content. The PHP code must include detailed comments (PHPDoc) that are compatible with PHPStan, explaining the operation of each property and method.


              Example of input:


              QUESTION: Can you create the Model?


              Example of output:


              {
                "path": "app/Models/MyModel.php",
                "content": "
                <?php

                namespace App\\Models;

                use Illuminate\\Database\\Eloquent\\Model;

                /**
                 * Class MyModel
                 * @package App\\Models
                 *
                 * This model represents the entity for the business logic related to 'MyModel'.
                 */
                class MyModel extends Model
                {
                  /**
                   * The attributes that are mass assignable.
                   *
                   * @var array<int, string>
                   */
                  protected $fillable = ['attribute1', 'attribute2'];

                  /**
                   * Explain what this method does.
                   *
                   * @return void
                   */
                  public function someMethod()
                  {
                    // method implementation
                  }
                }
                "
              }


              Each method and property should be documented in English, clearly explaining their purpose and use. Maintain a professional and technically accurate tone to reflect your experience as a senior developer.


              Ensure proper formatting of the file content.
          outgoingConnections:
            - output->"Assemble Message" 4Mi5IWMq5a4J4ZpP-6S3n/part1
          visualData: 361.06055325010055/-317.9516936577806/330/127//
        '[Pm1NgYTkwGzBIKGa4MTZW]:text "Text"':
          data:
            text: >-
              QUESTION: Generate the UpdateRequest and automatically infer the
              rules.

              - The file path should follow this format: app/Http/Requests/ + ModelName + /Update + ModelName + Request.php.- - For example, if it's for updating user data, the file should be named UpdateUserRequest.php.

              - Ensure that all fields use the "sometimes" rule instead of "required".

              - Additionally, ensure that all other validation rules are also included.
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message8
          visualData: 338.41259318139123/1772.3778493882835/330/233//
        '[RFs0dqw80evMO4f1hMh7X]:extractJson "Extract JSON"':
          isSplitRun: true
          outgoingConnections:
            - output->"Destructure" pqIM2Mcm6IaQ5hTYAPEvX/object
          splitRunMax: 10
          visualData: 1745.0141373753654/-74.82357642565627/280/198//
        '[T-gHRG8UBzX0ZLJZCp1HT]:chat "Chat"':
          data:
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            model: gpt-3.5-turbo
            parallelFunctionCalling: true
            responseFormat: json
            stop: ""
            temperature: 0.8
            top_p: 1
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePresencePenaltyInput: false
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          isSplitRun: true
          outgoingConnections:
            - response->"Extract JSON" IYeOVFRVn9BuIW2nenkPB/input
          splitRunMax: 8
          visualData: 1741.0177096818054/532.5827641307243/230/251//
        '[TafGdIQZL4qlRThxZ3Ctq]:text "Path"':
          data:
            text: "{{input}}"
          isSplitRun: true
          outgoingConnections:
            - output->"Write File" pj5mvJJ6NNZmQ0mwewvDZ/path
          splitRunMax: 10
          visualData: 2463.0217321136124/-160.93299410080203/345.20791372941176/253//
        '[TjZjhAsAqa-dI3ldYtO0N]:assemblePrompt "Assemble Prompt"':
          data:
            computeTokenCount: false
          outgoingConnections:
            - prompt->"Chat" EY0-JFFxxvNkFIuJ9a5y-/prompt
          visualData: 891.3295293304127/459.27580584802615/280/131//
        '[Y4m9Libmrt79ovG5uRy10]:text "Text"':
          data:
            text: >-
              QUESTION: Generate the route configuration file:


              - File Creation: Create a new route configuration file in the ./routes directory. The file name should include the current date and time in the format api_Y_m_d-H_i_s.php, where Y, m, d, H, i, and s are replaced with the actual year, month, day, hour, minute, and second at the time of file creation. For instance, if the file is created on April 26, 2024, at 15:05:00, the filename should be api_2024_04_26-15_05_00.php. This file will contain all the route definitions for the application.


              - Routing Definitions: Each route in the file must direct to a specific Controller that handles requests for that route. For example, if managing user data, routes should point to actions defined in the UserController.


              - Nested Routes: Implement nested routes for hierarchical resource structures. For instance, for managing posts under users, the definition could be Route::apiResource('users.posts', UserPostController::class).


              - Non-Nested Routes: Define routes for standalone actions or resources that do not depend on a hierarchical structure, such as routes for authentication or system status checks.


              - Dynamic Route Configuration: Include flexibility in route definitions to adapt to various controllers and actions as per user requirements. For example, for an API route that handles operations related to a Movement's insert within an Operation, the route could be defined as: Route::post('operations/{operation}/movements', [OperationMovementController::class, 'store'])->name('operations.movements.store');


              - Additional Notes: Ensure that the routing file and its contents reflect real-time and accurate route generation based on specified conditions, including correct date and time formatting in the file path. Routes should be tailored to meet specific operational needs and scenarios provided by the user, facilitating easy modification and extension.
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message1
          visualData: 351.2964060140792/369.76307396154044/330/242//
        '[Z6zzofm0BRvQwAjynWlLP]:writeFile "Write File"':
          data:
            baseDirectory: /home/dade/rivet/workspace
            content: ""
            path: ""
            useBaseDirectoryInput: false
            useContentInput: true
            usePathInput: true
          isSplitRun: true
          splitRunMax: 10
          visualData: 3421.503864659122/452.66741919291127/238.46814092869363/254//
        '[ZwbTcUhFMlDi6Rr1-g3KT]:text "Text"':
          data:
            text: >-
              QUESTION: Generate the Laravel API Resource Controller for the
              specified model, ensuring adherence to the provided guidelines:


              - Namespace for the Controller: App\Http\Controllers\Api

              - Controller Dynamics: Manages the task's model, dynamically defined based on context.

              - Return Type: Ensure that all methods return a JsonResponse.

              - CRUD Methods:
                 - Index Method: Fetch all instances of the model, returning them using a resource collection.
                 - Store Method: Validate incoming data with a specific request (e.g., StoreModelRequest), create the model instance, and return it using a resource class. Include custom logic as specified.
                 - Show Method: Display a single model instance using a resource class.
                 - Update Method: Validate incoming data with a specific request (e.g., UpdateModelRequest), update the model instance, and return the updated instance using a resource class.
                 - Destroy Method: Delete the model instance and confirm the deletion with a JSON response.
              - Parameter Handling: Correctly handle parameters and manage nested resources if applicable (e.g., User -> Restaurant -> Model).

              - PHPDoc Compliance: Include PHPDoc comments above each method to meet PHPStan standards.

              - Custom Method Logic: Implement additional custom methods or logic within standard CRUD operations as specified by the task. This includes handling specific conditions or actions based on the data received in requests.


              Additional Notes:


              - Ensure that method signatures and responses are type-hinted for reliability and maintainability.
                  Adhere to Laravel's best practices for API development, focusing on secure and validated data handling.

              Note: All methods must be fully implemented, either with custom logic or returning a JsonResponse through a Resource class."


              Additional Notes:

                 - Ensure that method signatures and responses are type-hinted for reliability and maintainability.
                 - Adhere to Laravel's best practices for API development, focusing on secure and validated data handling.
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message4
          visualData: 355.7844220564903/975.9983034904482/330/255//
        '[eWx337N91cvDojFOBdPa8]:destructure "Destructure"':
          data:
            paths:
              - $.path
              - $.content
              - ""
          isSplitRun: true
          outgoingConnections:
            - match_0->"Path" nEyVuexgUzJa9Nu6WjXqS/input
            - match_1->"Content" L19IEEAiyY1lanRaje3mG/input
          splitRunMax: 10
          visualData: 2647.4830219984/535.0743743140677/280/254//
        '[hifUE-tnBYImhrsRKCJ2K]:text "Text"':
          data:
            text: |-
              QUESTION: Write Unit Tests in Laravel for this file "content".

              Always return a JSON with the path and content.

              The file path should be tests/Unit/filename.php

              Replace 'filename' with the actual name of the file.
          outgoingConnections:
            - output->"Chat" T-gHRG8UBzX0ZLJZCp1HT/systemPrompt
          visualData: 1706.9187167312166/217.16707933777752/330/248//
        '[l5gAk5NtKrY9Fhldt1DES]:text "Text"':
          data:
            text: "QUESTION: Generate the Factory for the model specified, ensuring the path
              follows the guidelines. For example, if the model is 'Product',
              the factory file should be named
              database/factories/ProductFactory.php."
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message5
          visualData: 343.3317801316174/1190.1275198585504/330/241//
        '[nEyVuexgUzJa9Nu6WjXqS]:text "Path"':
          data:
            text: "{{input}}"
          isSplitRun: true
          outgoingConnections:
            - output->"Write File" Z6zzofm0BRvQwAjynWlLP/path
          splitRunMax: 10
          visualData: 3009.7818821300916/431.7416187416755/345.20791372941176/254//
        '[pj5mvJJ6NNZmQ0mwewvDZ]:writeFile "Write File"':
          data:
            baseDirectory: /home/dade/rivet/workspace
            content: ""
            path: ""
            useBaseDirectoryInput: false
            useContentInput: true
            usePathInput: true
          isSplitRun: true
          splitRunMax: 10
          visualData: 2874.7437146426428/-140.00719364956632/238.46814092869363/203//
        '[pqIM2Mcm6IaQ5hTYAPEvX]:destructure "Destructure"':
          data:
            paths:
              - $.path
              - $.content
              - ""
          isSplitRun: true
          outgoingConnections:
            - match_0->"Path" TafGdIQZL4qlRThxZ3Ctq/input
            - match_1->"Content" JDgNiSDQpWlGM3EdRYcBQ/input
          splitRunMax: 10
          visualData: 2100.722871981921/-57.60023852840983/280/252//
        '[qTKPdxQMQ1wbc_9rQ0dmg]:text "Text"':
          data:
            text: >-
              QUESTION: Generate a Laravel Resource with a JsonResponse.

              - Include the PHPDoc mixin annotation for a specific model.

              - For instance, if you're handling profile management and the model is called "Profile," the annotation should be @mixin Profile.

              - Example: If you're working on profile management, you would create a resource file named ProfileResource.php and add @mixin Profile at the beginning of the code.
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message6
          visualData: 352.95260549086703/1359.1031288279696/330/236//
        '[wb-EGUkEA3pN82rRakryh]:text "Text"':
          data:
            text: >-
              QUESTION: Generate the Migration.


              - File Naming: Create a new migration file in the database/migrations directory. The file name should follow the format YYYY_MM_DD_HHMMSS_create_modelname_table.php, where:
                      YYYY, MM, and DD represent the current year, month, and day.
                      HHMMSS represents the current time in hours, minutes, and seconds.
                      modelname should be replaced with the singular, lowercase name of the model the migration is intended for.

              - For example, if you are creating a migration for a Movements table on March 25, 2024, at 3:04 PM and 00 seconds, the file name should be 2024_03_25_150400_create_movements_table.php.


              - Migration Content: The migration file should contain SQL or equivalent Laravel migration commands to create the specified table with appropriate fields and data types as required by the model.
          outgoingConnections:
            - output->"Assemble Prompt" TjZjhAsAqa-dI3ldYtO0N/message2
          visualData: 355.80787004776175/654.9818594179073/330/239//
  metadata:
    description: ""
    id: y2CvKVDTNw69FIOu79xIV
    title: Auto Laravel Sr Dev
  plugins:
    - id: rivet-plugin-fs@latest
      package: rivet-plugin-fs
      tag: latest
      type: package
